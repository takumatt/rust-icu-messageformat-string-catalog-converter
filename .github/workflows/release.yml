name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: rust-icu-messageformat-string-catalog-converter-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: rust-icu-messageformat-string-catalog-converter-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: rust-icu-messageformat-string-catalog-converter-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: rust-icu-messageformat-string-catalog-converter-windows-x86_64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Set binary permissions
        if: matrix.os != 'windows-latest'
        run: chmod +x target/${{ matrix.target }}/release/rust-icu-messageformat-string-catalog-converter

      - name: List build artifacts
        if: matrix.os != 'windows-latest'
        run: |
          echo "Listing build artifacts for ${{ matrix.os }}"
          ls -la target/${{ matrix.target }}/release/

      - name: List build artifacts (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "Listing build artifacts for Windows"
          dir target\${{ matrix.target }}\release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/${{ matrix.target }}/release/rust-icu-messageformat-string-catalog-converter${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          if-no-files-found: error

      - name: List downloaded artifacts
        run: |
          echo "Listing downloaded artifacts"
          ls -la artifacts/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/rust-icu-messageformat-string-catalog-converter-linux-x86_64/rust-icu-messageformat-string-catalog-converter
            artifacts/rust-icu-messageformat-string-catalog-converter-macos-x86_64/rust-icu-messageformat-string-catalog-converter
            artifacts/rust-icu-messageformat-string-catalog-converter-macos-aarch64/rust-icu-messageformat-string-catalog-converter
            artifacts/rust-icu-messageformat-string-catalog-converter-windows-x86_64.exe/rust-icu-messageformat-string-catalog-converter.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 